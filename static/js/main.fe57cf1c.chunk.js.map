{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","setTodos","todos","setStatus","value","onChange","e","target","type","className","placeholder","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setfilteredTodos","useEffect","getLocalTodos","saveLocalTodos","filteredHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe57cf1c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, inputText, setTodos, todos, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  \r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    if (inputText === \"\") {\r\n      return;\r\n    } else {\r\n      setTodos([\r\n        ...todos,\r\n        { text: inputText, completed: false, id: Math.random() * 1000 },\r\n      ]);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n  \r\n    const statusHandler = (e) => {\r\n      setStatus(e.target.value)\r\n    };\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        placeholder=\"Lets go..\"\r\n      />\r\n      <button className=\"todo-button\" type=\"submit\" onClick={submitTodoHandler}>\r\n        <ion-icon name=\"add-outline\" className=\"todo-button-icon\"></ion-icon>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        \r\n          return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <ion-icon name=\"shield-checkmark-outline\"></ion-icon>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <ion-icon name=\"trash-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            text={todo.text}\r\n            key={todo.id}\r\n            todo={todo}\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    saveLocalTodos();\n    filteredHandler();\n  }, [todos, status]);\n\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setfilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(\n        (localStorage.getItem(\"todos\"))\n      );\n      setTodos(todoLocal);\n    }\n  };\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>So you want to get things done?</h1>\n      </header>\n      <Form\n        setTodos={setTodos}\n        todos={todos}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}