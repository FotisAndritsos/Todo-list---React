[{"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\index.js":"1","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\App.js":"2","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\reportWebVitals.js":"3","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\Form.js":"4","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\TodoList.js":"5","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1678,"mtime":1611587265287,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1275,"mtime":1611588048748,"results":"11","hashOfConfig":"8"},{"size":490,"mtime":1611583617008,"results":"12","hashOfConfig":"8"},{"size":939,"mtime":1611589671628,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"3z1hd5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\index.js",[],["29","30"],"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\App.js",["31"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    saveLocalTodos();\n    filteredHandler();\n  }, [todos, status]);\n  const filteredHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setfilteredTodos(todos);\n        break;\n    }\n  };\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(\n        (localStorage.getItem(\"todos\"))\n      );\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>So you want to get things done?</h1>\n      </header>\n      <Form\n        setTodos={setTodos}\n        todos={todos}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Fotis\\Desktop\\react-todo\\src\\reportWebVitals.js",[],"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\Form.js",[],"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\TodoList.js",[],"C:\\Users\\Fotis\\Desktop\\react-todo\\src\\components\\Todo.js",["32"],"import React, { useState } from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        \r\n          return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button className=\"complete-btn\" onClick={completeHandler}>\r\n        <ion-icon name=\"shield-checkmark-outline\"></ion-icon>\r\n      </button>\r\n      <button className=\"trash-btn\" onClick={deleteHandler}>\r\n        <ion-icon name=\"trash-outline\"></ion-icon>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":19,"column":6,"nodeType":"39","endLine":19,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filteredHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["47"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [todos, status, saveLocalTodos, filteredHandler]",{"range":"50","text":"51"},[494,509],"[todos, status, saveLocalTodos, filteredHandler]"]